

local v0 = loadstring;
local v1 = loadstring([[
	local Env, upvalues = ...
	local new = newproxy(true)
	local mt = getmetatable(new)
	mt.__metatable = new
	mt.__environment = new
	mt.__index = function(t,k) return Env[k] or upvalues[k] end
	mt.__newindex = function(t,k,v)
		--if rawget(upvalues,k) then return rawset(upvalues,k,v) end
		Env[k] = v
	end
return setmetatable({},mt)
]], "");
local v2 = {};
local v3 = {};
local v4 = string.char;
local v5 = string.byte;
local v6 = string.sub;
local v7 = bit32 or bit;
local v8 = v7.bxor;
local v9 = table.concat;
local v10 = table.insert;
local function v11(v28, v29)
	v2[52] = {};
	for v45 = 1, #v28 do
		v10(v2[52], v4(v8(v5(v6(v28, v45, v45 + 1)), v5(v6(v29, 1 + (v45 % #v29), 1 + (v45 % #v29) + 1))) % 256));
	end
	return v9(v2[52]);
end
local v12 = tonumber;
local v13 = string.byte;
local v14 = string.char;
local v15 = string.sub;
local v16 = string.gsub;
local v17 = string.rep;
local v18 = table.concat;
local v19 = table.insert;
local v20 = math.ldexp;
local v21 = getfenv or function()
	return _ENV;
end;
local v22 = setmetatable;
local v23 = pcall;
local v24 = select;
local v25 = unpack or table.unpack;
local v26 = tonumber;
local function v27(v31, v32, ...)
	local v33 = 1;
	local v34;
	v31 = v16(v15(v31, 5), v11("\158\7", "\156\176\41\77\46\231"), function(v46)
		if (v13(v46, 2) == 81) then
			v2[219] = 0;
			while true do
				if (v2[219] == 0) then
					v34 = v12(v15(v46, 2 - 1, 1));
					return "";
				end
			end
		else
			v2[245] = 0;
			v2[248] = nil;
			while true do
				if (v2[245] == 0) then
					v2[248] = v14(v12(v46, 45 - 29));
					if v34 then
						v2[272] = v17(v2[248], v34);
						v34 = nil;
						return v2[272];
					else
						return v2[248];
					end
					break;
				end
			end
		end
	end);
	local function v35(v47, v48, v49)
		if v49 then
			v2[300] = (v47 / (2 ^ (v48 - (1 - 0)))) % (2 ^ (((v49 - 1) - (v48 - 1)) + 1));
			return v2[300] - (v2[300] % 1);
		else
			v2[330] = 0;
			v2[333] = nil;
			while true do
				if (v2[330] == 0) then
					v2[333] = 2 ^ (v48 - 1);
					return (((v47 % (v2[333] + v2[333])) >= v2[333]) and 1) or 0;
				end
			end
		end
	end
	local function v36()
		v2[369] = v13(v31, v33, v33);
		v33 = v33 + 1;
		return v2[369];
	end
	local function v37()
		v2[390] = 0;
		v2[393] = nil;
		v2[395] = nil;
		while true do
			if (v2[390] == 0) then
				v2[393], v2[395] = v13(v31, v33, v33 + 2);
				v33 = v33 + 2;
				v2[390] = 1;
			end
			if (1 == v2[390]) then
				return (v2[395] * 256) + v2[393];
			end
		end
	end
	local function v38()
		v2[443] = 0;
		v2[446] = nil;
		v2[448] = nil;
		v2[450] = nil;
		v2[452] = nil;
		while true do
			if (v2[443] == 1) then
				return (v2[452] * 16777216) + (v2[450] * 65536) + (v2[448] * 256) + v2[446];
			end
			if (v2[443] == 0) then
				v2[446], v2[448], v2[450], v2[452] = v13(v31, v33, v33 + 3);
				v33 = v33 + (10 - 6);
				v2[443] = 1;
			end
		end
	end
	local function v39()
		v2[512] = 0;
		v2[515] = nil;
		v2[517] = nil;
		v2[519] = nil;
		v2[521] = nil;
		v2[523] = nil;
		v2[525] = nil;
		while true do
			if (v2[512] == 1) then
				v2[519] = 1;
				v2[521] = (v35(v2[517], 1, 20) * (2 ^ (651 - (555 + 64)))) + v2[515];
				v2[512] = 2;
			end
			if (v2[512] == 3) then
				if (v2[523] == (927 - (214 + 713))) then
					if (v2[521] == 0) then
						return v2[525] * 0;
					else
						v2[585] = 0;
						while true do
							if (0 == v2[585]) then
								v2[523] = 1;
								v2[519] = 0 + 0;
								break;
							end
						end
					end
				elseif (v2[523] == 2047) then
					return ((v2[521] == 0) and (v2[525] * (1 / 0))) or (v2[525] * NaN);
				end
				return v20(v2[525], v2[523] - 1023) * (v2[519] + (v2[521] / ((1 + 1) ^ 52)));
			end
			if (v2[512] == 2) then
				v2[523] = v35(v2[517], 952 - (857 + 74), 31);
				v2[525] = ((v35(v2[517], 32) == (569 - (367 + 201))) and -1) or 1;
				v2[512] = 3;
			end
			if (0 == v2[512]) then
				v2[515] = v38();
				v2[517] = v38();
				v2[512] = 1;
			end
		end
	end
	local function v40(v66)
		v2[709] = 0;
		v2[712] = nil;
		v2[714] = nil;
		while true do
			if (v2[709] == 0) then
				v2[712] = nil;
				if not v66 then
					v66 = v38();
					if (v66 == 0) then
						return "";
					end
				end
				v2[709] = 1;
			end
			if (v2[709] == 2) then
				v2[714] = {};
				for v138 = 1, #v2[712] do
					v2[714][v138] = v14(v13(v15(v2[712], v138, v138)));
				end
				v2[709] = 3;
			end
			if (v2[709] == 1) then
				v2[712] = v15(v31, v33, (v33 + v66) - 1);
				v33 = v33 + v66;
				v2[709] = 2;
			end
			if (3 == v2[709]) then
				return v18(v2[714]);
			end
		end
	end
	local v41 = v38;
	local function v42(...)
		return {...}, v24("#", ...);
	end
	local function v43()
		v2[844] = {};
		v2[847] = {};
		v2[850] = {};
		v2[853] = {v2[844],v2[847],nil,v2[850]};
		v2[868] = v38();
		v2[872] = {};
		for v83 = 1, v2[868] do
			v2[880] = v36();
			v2[884] = nil;
			if (v2[880] == 1) then
				v2[884] = v36() ~= 0;
			elseif (v2[880] == (879 - (282 + 595))) then
				v2[884] = v39();
			elseif (v2[880] == 3) then
				v2[884] = v40();
			end
			v2[872][v83] = v2[884];
		end
		v2[853][3] = v36();
		for v87 = 1, v38() do
			v2[947] = 0;
			v2[950] = nil;
			while true do
				if (0 == v2[947]) then
					v2[950] = v36();
					if (v35(v2[950], 1, 1) == 0) then
						v2[974] = v35(v2[950], 2, 3);
						v2[981] = v35(v2[950], 4, 6);
						v2[988] = {v37(),v37(),nil,nil};
						if (v2[974] == 0) then
							v2[1010] = 0;
							while true do
								if (v2[1010] == 0) then
									v2[988][3] = v37();
									v2[988][4] = v37();
									break;
								end
							end
						elseif (v2[974] == 1) then
							v2[988][3] = v38();
						elseif (v2[974] == 2) then
							v2[988][3] = v38() - (2 ^ 16);
						elseif (v2[974] == (1640 - (1523 + 114))) then
							v2[988][3] = v38() - (2 ^ 16);
							v2[988][4] = v37();
						end
						if (v35(v2[981], 1, 1) == 1) then
							v2[988][2] = v2[872][v2[988][2 + 0]];
						end
						if (v35(v2[981], 2, 2 - 0) == 1) then
							v2[988][1068 - (68 + 997)] = v2[872][v2[988][3]];
						end
						if (v35(v2[981], 3, 3) == 1) then
							v2[988][4] = v2[872][v2[988][4]];
						end
						v2[844][v87] = v2[988];
					end
					break;
				end
			end
		end
		for v90 = 1, v38() do
			v2[847][v90 - (1271 - (226 + 1044))] = v43();
		end
		return v2[853];
	end
	local function v44(v77, v78, v79)
		local v80 = v77[1];
		local v81 = v77[2];
		local v82 = v77[3];
		return function(...)
			v2[1247] = v80;
			v2[1250] = v81;
			v2[1253] = v82;
			v2[1256] = v42;
			v2[1259] = 1;
			v2[1262] = -1;
			v2[1266] = {};
			v2[1269] = {...};
			v2[1275] = v24("#", ...) - 1;
			v2[1283] = {};
			v2[1286] = {};
			for v112 = 0, v2[1275] do
				if (v112 >= v2[1253]) then
					v2[1266][v112 - v2[1253]] = v2[1269][v112 + 1];
				else
					v2[1286][v112] = v2[1269][v112 + 1];
				end
			end
			v2[1328] = (v2[1275] - v2[1253]) + 1;
			v2[1335] = nil;
			v2[1337] = nil;
			while true do
				v2[1342] = 0;
				while true do
					if (v2[1342] == 0) then
						v2[1335] = v2[1247][v2[1259]];
						v2[1337] = v2[1335][1];
						v2[1342] = 1;
					end
					if (1 == v2[1342]) then
						if (v2[1337] <= (178 - 137)) then
							if (v2[1337] <= 20) then
								if (v2[1337] <= (126 - (32 + 85))) then
									if (v2[1337] <= (4 + 0)) then
										if (v2[1337] <= 1) then
											if (v2[1337] > 0) then
												v2[1286][v2[1335][2]] = #v2[1286][v2[1335][3]];
											else
												v2[1286][v2[1335][2]] = v79[v2[1335][3]];
											end
										elseif (v2[1337] <= 2) then
											v2[1452] = 0;
											v2[1455] = nil;
											while true do
												if (v2[1452] == 0) then
													v2[1455] = v2[1335][2];
													do
														return v25(v2[1286], v2[1455], v2[1262]);
													end
													break;
												end
											end
										elseif (v2[1337] > 3) then
											v2[1286][v2[1335][2]] = v2[1286][v2[1335][3]] + v2[1335][4];
										elseif v2[1286][v2[1335][2]] then
											v2[1259] = v2[1259] + 1;
										else
											v2[1259] = v2[1335][3];
										end
									elseif (v2[1337] <= 6) then
										if (v2[1337] == 5) then
											v2[1286][v2[1335][2]] = #v2[1286][v2[1335][3]];
										else
											v2[1286][v2[1335][2]] = v78[v2[1335][1 + 2]];
										end
									elseif (v2[1337] <= 7) then
										v2[1259] = v2[1335][3];
									elseif (v2[1337] == 8) then
										v2[1286][v2[1335][959 - (892 + 65)]] = v2[1335][3];
									else
										v2[1614] = v2[1335][2];
										v2[1286][v2[1614]](v2[1286][v2[1614] + 1]);
									end
								elseif (v2[1337] <= (32 - 18)) then
									if (v2[1337] <= 11) then
										if (v2[1337] > 10) then
											v2[1646] = 0;
											v2[1649] = nil;
											v2[1651] = nil;
											v2[1653] = nil;
											v2[1655] = nil;
											while true do
												if (v2[1646] == 1) then
													v2[1262] = (v2[1653] + v2[1649]) - 1;
													v2[1655] = 0;
													v2[1646] = 2;
												end
												if (v2[1646] == 2) then
													for v453 = v2[1649], v2[1262] do
														v2[1655] = v2[1655] + 1;
														v2[1286][v453] = v2[1651][v2[1655]];
													end
													break;
												end
												if (v2[1646] == 0) then
													v2[1649] = v2[1335][2];
													v2[1651], v2[1653] = v2[1256](v2[1286][v2[1649]](v25(v2[1286], v2[1649] + 1, v2[1335][5 - 2])));
													v2[1646] = 1;
												end
											end
										else
											v2[1745] = v2[1335][3 - 1];
											v2[1752] = v2[1286][v2[1745] + 2];
											v2[1759] = v2[1286][v2[1745]] + v2[1752];
											v2[1286][v2[1745]] = v2[1759];
											if (v2[1752] > 0) then
												if (v2[1759] <= v2[1286][v2[1745] + 1]) then
													v2[1788] = 0;
													while true do
														if (v2[1788] == 0) then
															v2[1259] = v2[1335][3];
															v2[1286][v2[1745] + 3] = v2[1759];
															break;
														end
													end
												end
											elseif (v2[1759] >= v2[1286][v2[1745] + 1]) then
												v2[1828] = 0;
												while true do
													if (v2[1828] == 0) then
														v2[1259] = v2[1335][3];
														v2[1286][v2[1745] + 3] = v2[1759];
														break;
													end
												end
											end
										end
									elseif (v2[1337] <= 12) then
										do
											return v2[1286][v2[1335][2]]();
										end
									elseif (v2[1337] == 13) then
										v2[1878] = 0;
										v2[1881] = nil;
										while true do
											if (v2[1878] == 0) then
												v2[1881] = v2[1335][2];
												v2[1286][v2[1881]](v25(v2[1286], v2[1881] + 1, v2[1262]));
												break;
											end
										end
									else
										v2[1286][v2[1335][352 - (87 + 263)]] = v2[1286][v2[1335][3]];
									end
								elseif (v2[1337] <= 17) then
									if (v2[1337] <= 15) then
										if (v2[1335][2] == v2[1286][v2[1335][4]]) then
											v2[1259] = v2[1259] + 1;
										else
											v2[1259] = v2[1335][3];
										end
									elseif (v2[1337] == 16) then
										v2[1286][v2[1335][2]][v2[1335][3]] = v2[1335][4];
									else
										v2[1286][v2[1335][2]] = v2[1286][v2[1335][3]] % v2[1335][4];
									end
								elseif (v2[1337] <= 18) then
									if (v2[1286][v2[1335][2]] == v2[1335][4]) then
										v2[1259] = v2[1259] + 1;
									else
										v2[1259] = v2[1335][3];
									end
								elseif (v2[1337] > 19) then
									v2[2054] = v2[1335][182 - (67 + 113)];
									v2[2063] = v2[1286][v2[1335][3]];
									v2[1286][v2[2054] + 1] = v2[2063];
									v2[1286][v2[2054]] = v2[2063][v2[1335][4]];
								else
									v2[1286][v2[1335][2]][v2[1286][v2[1335][3]]] = v2[1286][v2[1335][4]];
								end
							elseif (v2[1337] <= (22 + 8)) then
								if (v2[1337] <= 25) then
									if (v2[1337] <= 22) then
										if (v2[1337] == 21) then
											v2[1286][v2[1335][2]] = v2[1335][3] + v2[1286][v2[1335][4]];
										else
											v2[2167] = v2[1335][2];
											v2[1286][v2[2167]] = v2[1286][v2[2167]](v2[1286][v2[2167] + 1]);
										end
									elseif (v2[1337] <= 23) then
										v2[2194] = v2[1335][2];
										v2[1286][v2[2194]] = v2[1286][v2[2194]](v25(v2[1286], v2[2194] + 1, v2[1262]));
									elseif (v2[1337] == 24) then
										if (v2[1286][v2[1335][2]] == v2[1335][9 - 5]) then
											v2[1259] = v2[1259] + 1;
										else
											v2[1259] = v2[1335][3 + 0];
										end
									else
										v2[1286][v2[1335][2]] = v2[1286][v2[1335][3]] + v2[1335][4];
									end
								elseif (v2[1337] <= 27) then
									if (v2[1337] > (103 - 77)) then
										v2[1286][v2[1335][2]]();
									elseif (v2[1335][2] == v2[1286][v2[1335][956 - (802 + 150)]]) then
										v2[1259] = v2[1259] + 1;
									else
										v2[1259] = v2[1335][3];
									end
								elseif (v2[1337] <= 28) then
									v2[2326] = v2[1335][5 - 3];
									v2[2333] = v2[1286][v2[1335][3]];
									v2[1286][v2[2326] + 1] = v2[2333];
									v2[1286][v2[2326]] = v2[2333][v2[1335][4]];
								elseif (v2[1337] == 29) then
									do
										return v2[1286][v2[1335][2]]();
									end
								else
									v2[2379] = v2[1335][2];
									v2[2384] = {};
									for v398 = 1, #v2[1283] do
										v2[2393] = v2[1283][v398];
										for v462 = 0, #v2[2393] do
											v2[2404] = v2[2393][v462];
											v2[2409] = v2[2404][1];
											v2[2414] = v2[2404][2];
											if ((v2[2409] == v2[1286]) and (v2[2414] >= v2[2379])) then
												v2[2428] = 0;
												while true do
													if (0 == v2[2428]) then
														v2[2384][v2[2414]] = v2[2409][v2[2414]];
														v2[2404][1] = v2[2384];
														break;
													end
												end
											end
										end
									end
								end
							elseif (v2[1337] <= 35) then
								if (v2[1337] <= 32) then
									if (v2[1337] == 31) then
										v2[1286][v2[1335][2]] = v2[1286][v2[1335][3]] % v2[1286][v2[1335][4]];
									else
										v2[2497] = v2[1250][v2[1335][3]];
										v2[2504] = nil;
										local v215 = {};
										v167 = v22({}, {[v11("\127\133\93\184\181\67\88", "\38\32\218\52\214\209")]=function(v266, v267)
											v2[2524] = 0;
											v2[2527] = nil;
											while true do
												if (0 == v2[2524]) then
													v2[2527] = v215[v267];
													return v2[2527][1][v2[2527][2]];
												end
											end
										end,[v11("\40\14\166\75\0\56\166\74\18\41", "\46\119\81\200")]=function(v270, v271, v272)
											v2[2561] = v215[v271];
											v2[2561][1][v2[2561][2]] = v272;
										end});
										for v276 = 1, v2[1335][4] do
											v2[1259] = v2[1259] + 1;
											v2[2596] = v2[1247][v2[1259]];
											if (v2[2596][1 - 0] == 14) then
												v215[v276 - 1] = {v2[1286],v2[2596][3 + 0]};
											else
												v215[v276 - 1] = {v78,v2[2596][3]};
											end
											v2[1283][#v2[1283] + 1] = v215;
										end
										v2[1286][v2[1335][5 - 3]] = v44(v2[2497], v167, v79);
									end
								elseif (v2[1337] <= 33) then
									v2[1286][v2[1335][2]][v2[1335][3]] = v2[1335][4];
								elseif (v2[1337] == (20 + 14)) then
									v2[2723] = v2[1335][2 - 0];
									v2[2730], v2[2731] = v2[1256](v2[1286][v2[2723]](v25(v2[1286], v2[2723] + 1, v2[1335][3])));
									v2[1262] = (v2[2731] + v2[2723]) - (1188 - (1069 + 118));
									v2[2760] = 0 - 0;
									for v403 = v2[2723], v2[1262] do
										v2[2770] = 0;
										while true do
											if (v2[2770] == 0) then
												v2[2760] = v2[2760] + (1 - 0);
												v2[1286][v403] = v2[2730][v2[2760]];
												break;
											end
										end
									end
								else
									v2[1286][v2[1335][2]] = v2[1335][3];
								end
							elseif (v2[1337] <= 38) then
								if (v2[1337] <= 36) then
									if (v2[1286][v2[1335][2]] == v2[1286][v2[1335][4]]) then
										v2[1259] = v2[1259] + 1;
									else
										v2[1259] = v2[1335][3];
									end
								elseif (v2[1337] == (7 + 30)) then
									v2[1286][v2[1335][2]][v2[1286][v2[1335][3]]] = v2[1286][v2[1335][4]];
								else
									v2[2889] = 0;
									v2[2892] = nil;
									while true do
										if (v2[2889] == 0) then
											v2[2892] = v2[1335][2];
											v2[1286][v2[2892]] = v2[1286][v2[2892]](v25(v2[1286], v2[2892] + 1, v2[1335][3]));
											break;
										end
									end
								end
							elseif (v2[1337] <= 39) then
								do
									return;
								end
							elseif (v2[1337] == 40) then
								v2[2943] = v2[1335][2];
								v2[2948] = v2[1286][v2[2943]];
								for v405 = v2[2943] + 1, v2[1262] do
									v19(v2[2948], v2[1286][v405]);
								end
							else
								for v406 = v2[1335][2], v2[1335][3] do
									v2[1286][v406] = nil;
								end
							end
						elseif (v2[1337] <= 62) then
							if (v2[1337] <= 51) then
								if (v2[1337] <= 46) then
									if (v2[1337] <= 43) then
										if (v2[1337] > 42) then
											v2[3010] = 0;
											v2[3013] = nil;
											v2[3015] = nil;
											while true do
												if (1 == v2[3010]) then
													for v471 = v2[3013] + 1, v2[1262] do
														v19(v2[3015], v2[1286][v471]);
													end
													break;
												end
												if (v2[3010] == 0) then
													v2[3013] = v2[1335][2];
													v2[3015] = v2[1286][v2[3013]];
													v2[3010] = 1;
												end
											end
										else
											v2[3061] = 0;
											v2[3064] = nil;
											v2[3066] = nil;
											v2[3068] = nil;
											v2[3070] = nil;
											while true do
												if (v2[3061] == 2) then
													for v472 = v2[3064], v2[1262] do
														v2[3070] = v2[3070] + 1;
														v2[1286][v472] = v2[3066][v2[3070]];
													end
													break;
												end
												if (v2[3061] == 0) then
													v2[3064] = v2[1335][2];
													v2[3066], v2[3068] = v2[1256](v2[1286][v2[3064]](v25(v2[1286], v2[3064] + 1, v2[1262])));
													v2[3061] = 1;
												end
												if (1 == v2[3061]) then
													v2[1262] = (v2[3068] + v2[3064]) - 1;
													v2[3070] = 0;
													v2[3061] = 2;
												end
											end
										end
									elseif (v2[1337] <= 44) then
										v2[3161] = 0;
										v2[3164] = nil;
										v2[3166] = nil;
										local v230;
										while true do
											if (v2[3161] == 2) then
												for v476 = 1 - 0, v2[1335][4 + 0] do
													v2[3189] = 0;
													v2[3192] = nil;
													while true do
														if (0 == v2[3189]) then
															v2[1259] = v2[1259] + 1;
															v2[3192] = v2[1247][v2[1259]];
															v2[3189] = 1;
														end
														if (v2[3189] == 1) then
															if (v2[3192][1] == 14) then
																v230[v476 - 1] = {v2[1286],v2[3192][3]};
															else
																v230[v476 - 1] = {v78,v2[3192][3]};
															end
															v2[1283][#v2[1283] + 1] = v230;
															break;
														end
													end
												end
												v2[1286][v2[1335][793 - (368 + 423)]] = v44(v2[3164], v2[3166], v79);
												break;
											end
											if (1 == v2[3161]) then
												v230 = {};
												v2[3166] = v22({}, {[v11("\122\243\63\37\136\181\93", "\208\37\172\86\75\236")]=function(v479, v480)
													v2[3335] = v230[v480];
													return v2[3335][1][v2[3335][2]];
												end,[v11("\150\130\225\142\187\160\179\235\142\180", "\204\201\221\143\235")]=function(v483, v484, v485)
													v2[3358] = v230[v484];
													v2[3358][1][v2[3358][2]] = v485;
												end});
												v2[3161] = 2;
											end
											if (0 == v2[3161]) then
												v2[3164] = v2[1250][v2[1335][3]];
												v2[3166] = nil;
												v2[3161] = 1;
											end
										end
									elseif (v2[1337] == 45) then
										v2[3411] = v2[1335][2];
										v2[1286][v2[3411]] = v2[1286][v2[3411]](v25(v2[1286], v2[3411] + 1, v2[1335][3]));
									else
										v2[3437] = v2[1335][2];
										v2[1286][v2[3437]](v25(v2[1286], v2[3437] + 1, v2[1335][3]));
									end
								elseif (v2[1337] <= 48) then
									if (v2[1337] > 47) then
										do
											return;
										end
									elseif not v2[1286][v2[1335][2]] then
										v2[1259] = v2[1259] + 1;
									else
										v2[1259] = v2[1335][9 - 6];
									end
								elseif (v2[1337] <= 49) then
									v2[1286][v2[1335][2]] = v2[1286][v2[1335][3]];
								elseif (v2[1337] == 50) then
									v2[3520] = 0;
									v2[3523] = nil;
									v2[3525] = nil;
									v2[3527] = nil;
									v2[3529] = nil;
									while true do
										if (v2[3520] == 0) then
											v2[3523] = v2[1335][2];
											v2[3525], v2[3527] = v2[1256](v2[1286][v2[3523]](v2[1286][v2[3523] + 1]));
											v2[3520] = 1;
										end
										if (v2[3520] == 1) then
											v2[1262] = (v2[3527] + v2[3523]) - 1;
											v2[3529] = 0;
											v2[3520] = 2;
										end
										if (v2[3520] == 2) then
											for v550 = v2[3523], v2[1262] do
												v2[3595] = 0;
												while true do
													if (v2[3595] == 0) then
														v2[3529] = v2[3529] + 1;
														v2[1286][v550] = v2[3525][v2[3529]];
														break;
													end
												end
											end
											break;
										end
									end
								else
									v2[1286][v2[1335][2]] = v79[v2[1335][3]];
								end
							elseif (v2[1337] <= 56) then
								if (v2[1337] <= 53) then
									if (v2[1337] == 52) then
										if not v2[1286][v2[1335][2]] then
											v2[1259] = v2[1259] + (19 - (10 + 8));
										else
											v2[1259] = v2[1335][3];
										end
									else
										v2[3683] = v2[1335][2];
										v2[1286][v2[3683]](v25(v2[1286], v2[3683] + 1, v2[1262]));
									end
								elseif (v2[1337] <= 54) then
									v2[3705] = 0;
									v2[3708] = nil;
									while true do
										if (v2[3705] == 0) then
											v2[3708] = v2[1335][2];
											do
												return v2[1286][v2[3708]](v25(v2[1286], v2[3708] + 1, v2[1335][3]));
											end
											break;
										end
									end
								elseif (v2[1337] > 55) then
									v2[3746] = 0;
									v2[3749] = nil;
									while true do
										if (v2[3746] == 0) then
											v2[3749] = v2[1335][7 - 5];
											v2[1286][v2[3749]](v2[1286][v2[3749] + 1]);
											break;
										end
									end
								else
									v2[1286][v2[1335][2]][v2[1286][v2[1335][3]]] = v2[1335][4];
								end
							elseif (v2[1337] <= 59) then
								if (v2[1337] <= 57) then
									v2[1286][v2[1335][2]] = {};
								elseif (v2[1337] > 58) then
									v2[3833] = 0;
									v2[3836] = nil;
									while true do
										if (v2[3833] == 0) then
											v2[3836] = v2[1335][2];
											do
												return v2[1286][v2[3836]](v25(v2[1286], v2[3836] + 1, v2[1335][3]));
											end
											break;
										end
									end
								else
									v2[1286][v2[1335][2]][v2[1335][445 - (416 + 26)]] = v2[1286][v2[1335][4]];
								end
							elseif (v2[1337] <= 60) then
								v2[3907] = 0;
								v2[3910] = nil;
								v2[3912] = nil;
								v2[3914] = nil;
								v2[3916] = nil;
								while true do
									if (0 == v2[3907]) then
										v2[3910] = v2[1335][2];
										v2[3912], v2[3914] = v2[1256](v2[1286][v2[3910]](v25(v2[1286], v2[3910] + 1, v2[1262])));
										v2[3907] = 1;
									end
									if (v2[3907] == 2) then
										for v489 = v2[3910], v2[1262] do
											v2[3916] = v2[3916] + 1;
											v2[1286][v489] = v2[3912][v2[3916]];
										end
										break;
									end
									if (v2[3907] == 1) then
										v2[1262] = (v2[3914] + v2[3910]) - 1;
										v2[3916] = 0;
										v2[3907] = 2;
									end
								end
							elseif (v2[1337] > 61) then
								v2[4007] = 0;
								v2[4010] = nil;
								v2[4012] = nil;
								v2[4014] = nil;
								v2[4016] = nil;
								while true do
									if (1 == v2[4007]) then
										v2[1262] = (v2[4014] + v2[4010]) - 1;
										v2[4016] = 0;
										v2[4007] = 2;
									end
									if (v2[4007] == 0) then
										v2[4010] = v2[1335][2];
										v2[4012], v2[4014] = v2[1256](v2[1286][v2[4010]](v2[1286][v2[4010] + 1]));
										v2[4007] = 1;
									end
									if (v2[4007] == 2) then
										for v552 = v2[4010], v2[1262] do
											v2[4082] = 0;
											while true do
												if (v2[4082] == 0) then
													v2[4016] = v2[4016] + 1;
													v2[1286][v552] = v2[4012][v2[4016]];
													break;
												end
											end
										end
										break;
									end
								end
							else
								v2[1286][v2[1335][2]] = v78[v2[1335][3]];
							end
						elseif (v2[1337] <= 72) then
							if (v2[1337] <= 67) then
								if (v2[1337] <= (204 - 140)) then
									if (v2[1337] == 63) then
										v2[4151] = v2[1335][1 + 1];
										v2[4158] = v2[1286][v2[4151]];
										v2[4163] = v2[1286][v2[4151] + 2];
										if (v2[4163] > 0) then
											if (v2[4158] > v2[1286][v2[4151] + (1 - 0)]) then
												v2[1259] = v2[1335][3];
											else
												v2[1286][v2[4151] + 3] = v2[4158];
											end
										elseif (v2[4158] < v2[1286][v2[4151] + 1]) then
											v2[1259] = v2[1335][3];
										else
											v2[1286][v2[4151] + 3] = v2[4158];
										end
									else
										v2[4235] = v2[1335][2];
										do
											return v25(v2[1286], v2[4235], v2[1262]);
										end
									end
								elseif (v2[1337] <= 65) then
									v2[4253] = v2[1335][2];
									v2[1286][v2[4253]] = v2[1286][v2[4253]](v25(v2[1286], v2[4253] + 1, v2[1262]));
								elseif (v2[1337] == (504 - (145 + 293))) then
									v2[4286] = 0;
									v2[4289] = nil;
									while true do
										if (0 == v2[4286]) then
											v2[4289] = v2[1335][2];
											v2[1286][v2[4289]](v25(v2[1286], v2[4289] + 1, v2[1335][3]));
											break;
										end
									end
								else
									v2[4320] = v2[1335][2];
									v2[4325] = {};
									for v438 = 1, #v2[1283] do
										v2[4334] = v2[1283][v438];
										for v501 = 0, #v2[4334] do
											v2[4345] = v2[4334][v501];
											v2[4350] = v2[4345][431 - (44 + 386)];
											v2[4359] = v2[4345][2];
											if ((v2[4350] == v2[1286]) and (v2[4359] >= v2[4320])) then
												v2[4325][v2[4359]] = v2[4350][v2[4359]];
												v2[4345][1] = v2[4325];
											end
										end
									end
								end
							elseif (v2[1337] <= 69) then
								if (v2[1337] > 68) then
									if v2[1286][v2[1335][2]] then
										v2[1259] = v2[1259] + 1;
									else
										v2[1259] = v2[1335][3];
									end
								else
									v2[1286][v2[1335][1488 - (998 + 488)]] = v2[1286][v2[1335][3]] % v2[1286][v2[1335][4]];
								end
							elseif (v2[1337] <= (23 + 47)) then
								v2[1286][v2[1335][2]] = v2[1286][v2[1335][3 + 0]][v2[1335][4]];
							elseif (v2[1337] > (843 - (201 + 571))) then
								v2[1286][v2[1335][2]] = v2[1335][3] + v2[1286][v2[1335][1142 - (116 + 1022)]];
							else
								v2[1286][v2[1335][2]] = {};
							end
						elseif (v2[1337] <= 77) then
							if (v2[1337] <= 74) then
								if (v2[1337] > 73) then
									v2[1286][v2[1335][2]][v2[1286][v2[1335][3]]] = v2[1335][16 - 12];
								else
									v2[1286][v2[1335][2]] = v2[1286][v2[1335][3]] % v2[1335][3 + 1];
								end
							elseif (v2[1337] <= 75) then
								v2[1286][v2[1335][2]] = v2[1286][v2[1335][3]][v2[1335][4]];
							elseif (v2[1337] > 76) then
								if (v2[1286][v2[1335][7 - 5]] == v2[1286][v2[1335][14 - 10]]) then
									v2[1259] = v2[1259] + 1;
								else
									v2[1259] = v2[1335][3];
								end
							else
								v2[4660] = 0;
								v2[4663] = nil;
								v2[4665] = nil;
								v2[4667] = nil;
								while true do
									if (2 == v2[4660]) then
										if (v2[4665] > 0) then
											if (v2[4667] <= v2[1286][v2[4663] + (860 - (814 + 45))]) then
												v2[4695] = 0;
												while true do
													if (v2[4695] == 0) then
														v2[1259] = v2[1335][3];
														v2[1286][v2[4663] + 3] = v2[4667];
														break;
													end
												end
											end
										elseif (v2[4667] >= v2[1286][v2[4663] + (2 - 1)]) then
											v2[1259] = v2[1335][3];
											v2[1286][v2[4663] + 3] = v2[4667];
										end
										break;
									end
									if (v2[4660] == 1) then
										v2[4667] = v2[1286][v2[4663]] + v2[4665];
										v2[1286][v2[4663]] = v2[4667];
										v2[4660] = 2;
									end
									if (v2[4660] == 0) then
										v2[4663] = v2[1335][2];
										v2[4665] = v2[1286][v2[4663] + 2];
										v2[4660] = 1;
									end
								end
							end
						elseif (v2[1337] <= (5 + 75)) then
							if (v2[1337] <= 78) then
								v2[1286][v2[1335][2]]();
							elseif (v2[1337] == 79) then
								v2[4829] = v2[1335][2];
								v2[1286][v2[4829]] = v2[1286][v2[4829]](v2[1286][v2[4829] + 1]);
							else
								v2[1259] = v2[1335][3];
							end
						elseif (v2[1337] <= 81) then
							v2[4863] = 0;
							v2[4866] = nil;
							v2[4868] = nil;
							v2[4870] = nil;
							while true do
								if (0 == v2[4863]) then
									v2[4866] = v2[1335][2];
									v2[4868] = v2[1286][v2[4866]];
									v2[4863] = 1;
								end
								if (v2[4863] == 1) then
									v2[4870] = v2[1286][v2[4866] + 2];
									if (v2[4870] > 0) then
										if (v2[4868] > v2[1286][v2[4866] + 1]) then
											v2[1259] = v2[1335][2 + 1];
										else
											v2[1286][v2[4866] + 3] = v2[4868];
										end
									elseif (v2[4868] < v2[1286][v2[4866] + 1]) then
										v2[1259] = v2[1335][3];
									else
										v2[1286][v2[4866] + 3] = v2[4868];
									end
									break;
								end
							end
						elseif (v2[1337] > 82) then
							v2[1286][v2[1335][887 - (261 + 624)]][v2[1335][4 - 1]] = v2[1286][v2[1335][1084 - (1020 + 60)]];
						else
							for v448 = v2[1335][2], v2[1335][1426 - (630 + 793)] do
								v2[1286][v448] = nil;
							end
						end
						v2[1259] = v2[1259] + 1;
						break;
					end
				end
			end
		end;
	end
	return v44(v43(), {}, v32)(...);
end
return vv21(), ...);
